import numpy as np
import pandas as pd
import string
from numpy.random import normal,random,seed

from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import log_loss
from sklearn import metrics
import scipy.stats as st
import pickle
import lightgbm as lgb


#Test Set for Submission

dtypes = {
        'MachineIdentifier':                                    'category',
        'ProductName':                                          'category',
        'EngineVersion':                                        'category',
        'AppVersion':                                           'category',
        'AvSigVersion':                                         'category',
        'IsBeta':                                               'int8',
        'RtpStateBitfield':                                     'float16',
        'IsSxsPassiveMode':                                     'int8',
        'DefaultBrowsersIdentifier':                            'float16',
        'AVProductStatesIdentifier':                            'float32',
        'AVProductsInstalled':                                  'float16',
        'AVProductsEnabled':                                    'float16',
        'HasTpm':                                               'int8',
        'CountryIdentifier':                                    'int16',
        'CityIdentifier':                                       'float32',
        'OrganizationIdentifier':                               'float16',
        'GeoNameIdentifier':                                    'float16',
        'LocaleEnglishNameIdentifier':                          'int8',
        'Platform':                                             'category',
        'Processor':                                            'category',
        'OsVer':                                                'category',
        'OsBuild':                                              'int16',
        'OsSuite':                                              'int16',
        'OsPlatformSubRelease':                                 'category',
        'OsBuildLab':                                           'category',
        'SkuEdition':                                           'category',
        'IsProtected':                                          'float16',
        'AutoSampleOptIn':                                      'int8',
        'PuaMode':                                              'category',
        'SMode':                                                'float16',
        'IeVerIdentifier':                                      'float16',
        'SmartScreen':                                          'category',
        'Firewall':                                             'float16',
        'UacLuaenable':                                         'float32',
        'Census_MDC2FormFactor':                                'category',
        'Census_DeviceFamily':                                  'category',
        'Census_OEMNameIdentifier':                             'float16',
        'Census_OEMModelIdentifier':                            'float32',
        'Census_ProcessorCoreCount':                            'float16',
        'Census_ProcessorManufacturerIdentifier':               'float16',
        'Census_ProcessorModelIdentifier':                      'float16',
        'Census_ProcessorClass':                                'category',
        'Census_PrimaryDiskTotalCapacity':                      'float32',
        'Census_PrimaryDiskTypeName':                           'category',
        'Census_SystemVolumeTotalCapacity':                     'float32',
        'Census_HasOpticalDiskDrive':                           'int8',
        'Census_TotalPhysicalRAM':                              'float32',
        'Census_ChassisTypeName':                               'category',
        'Census_InternalPrimaryDiagonalDisplaySizeInInches':    'float16',
        'Census_InternalPrimaryDisplayResolutionHorizontal':    'float16',
        'Census_InternalPrimaryDisplayResolutionVertical':      'float16',
        'Census_PowerPlatformRoleName':                         'category',
        'Census_InternalBatteryType':                           'category',
        'Census_InternalBatteryNumberOfCharges':                'float32',
        'Census_OSVersion':                                     'category',
        'Census_OSArchitecture':                                'category',
        'Census_OSBranch':                                      'category',
        'Census_OSBuildNumber':                                 'int16',
        'Census_OSBuildRevision':                               'int32',
        'Census_OSEdition':                                     'category',
        'Census_OSSkuName':                                     'category',
        'Census_OSInstallTypeName':                             'category',
        'Census_OSInstallLanguageIdentifier':                   'float16',
        'Census_OSUILocaleIdentifier':                          'int16',
        'Census_OSWUAutoUpdateOptionsName':                     'category',
        'Census_IsPortableOperatingSystem':                     'int8',
        'Census_GenuineStateName':                              'category',
        'Census_ActivationChannel':                             'category',
        'Census_IsFlightingInternal':                           'float16',
        'Census_IsFlightsDisabled':                             'float16',
        'Census_FlightRing':                                    'category',
        'Census_ThresholdOptIn':                                'float16',
        'Census_FirmwareManufacturerIdentifier':                'float16',
        'Census_FirmwareVersionIdentifier':                     'float32',
        'Census_IsSecureBootEnabled':                           'int8',
        'Census_IsWIMBootEnabled':                              'float16',
        'Census_IsVirtualDevice':                               'float16',
        'Census_IsTouchEnabled':                                'int8',
        'Census_IsPenCapable':                                  'int8',
        'Census_IsAlwaysOnAlwaysConnectedCapable':              'float16',
        'Wdft_IsGamer':                                         'float16',
        'Wdft_RegionIdentifier':                                'float16'        
        }

print("Loading submission test data")
DataTest = pd.read_csv("../data/test.csv", dtype=dtypes)

MachineIdentifierCol = DataTest['MachineIdentifier'].copy()

DataTest = DataTest.loc[:, ["ProductName", "EngineVersion", "AppVersion", "AvSigVersion", "AVProductStatesIdentifier", "HasTpm", "CountryIdentifier", "CityIdentifier", "OrganizationIdentifier", "GeoNameIdentifier", "LocaleEnglishNameIdentifier", "Platform", "Processor", "OsVer", "OsBuild", "OsSuite", "OsPlatformSubRelease", "OsBuildLab", "SkuEdition", "IsProtected", "PuaMode", "SMode", "SmartScreen", "Firewall", "UacLuaenable", "Census_MDC2FormFactor", "Census_DeviceFamily", "Census_ProcessorCoreCount", "Census_ProcessorClass", "Census_PrimaryDiskTotalCapacity", "Census_PrimaryDiskTypeName", "Census_SystemVolumeTotalCapacity", "Census_HasOpticalDiskDrive", "Census_TotalPhysicalRAM", "Census_ChassisTypeName", "Census_InternalPrimaryDiagonalDisplaySizeInInches", "Census_InternalPrimaryDisplayResolutionHorizontal", "Census_InternalPrimaryDisplayResolutionVertical", "Census_PowerPlatformRoleName", "Census_OSVersion", "Census_OSArchitecture", "Census_OSBranch", "Census_OSBuildNumber", "Census_OSBuildRevision", "Census_OSEdition", "Census_OSSkuName", "Census_OSInstallTypeName", "Census_OSWUAutoUpdateOptionsName", "Census_IsPortableOperatingSystem", "Census_GenuineStateName", "Census_ActivationChannel", "Census_IsFlightsDisabled", "Census_FlightRing", "Census_IsSecureBootEnabled", "Census_IsVirtualDevice", "Census_IsTouchEnabled", "Census_IsPenCapable", "Census_IsAlwaysOnAlwaysConnectedCapable", "Wdft_IsGamer"]]

print("Label encoding submission test data")
for column_name in DataTest.columns:
    if DataTest[column_name].dtype.name == 'category':
        DataTest.loc[:, column_name] = le.fit_transform(DataTest[column_name].astype(str))
    else:
        pass

DataTest = DataTest.fillna(-999)

print("Frequency encoding submission test data")
for column_name in DataTest.columns:
    if column_name not in ['Census_ProcessorCoreCount','Census_PrimaryDiskTotalCapacity',\
                                              'Census_SystemVolumeTotalCapacity','Census_TotalPhysicalRAM','Census_InternalPrimaryDiagonalDisplaySizeInInches',\
                                              'Census_InternalPrimaryDisplayResolutionHorizontal','Census_InternalPrimaryDisplayResolutionVertical']:
        probs = (DataTest[column_name].value_counts()/DataTest[column_name].count()).astype(np.float16)
        for ind in probs.index:
            DataTest.loc[DataTest[column_name] == ind, column_name] = probs[ind]
    else:
        pass

print("Saving frequency encoded submission test data")
pd.DataFrame.to_csv(DataTest, "SubmissionTest.csv")

print("Load model")
bst = lgb.Booster(model_file='lightGBMmodel.txt')  #init model

print("Generating predictions using Light GBM model for submission data")
test_gbm = bst.predict(DataTest)

print("Creating submission dataframe")
results_final = pd.DataFrame(data=test_gbm,    # values
           index=MachineIdentifierCol,    # 1st column as index
           columns=['HasDetections'])  # 1st row as the column names

print("Saving submission dataframe as csv")
pd.DataFrame.to_csv(results_final, "results_final_lightgbm_ens.csv")           
import numpy as np
import pandas as pd
import string
import xlearn as xl
from numpy.random import normal,random,seed
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.metrics import log_loss
import pickle

import sys  

reload(sys)  
sys.setdefaultencoding('utf8')

dtypes = {
        'MachineIdentifier':                                    'category',
        'ProductName':                                          'category',
        'EngineVersion':                                        'category',
        'AppVersion':                                           'category',
        'AvSigVersion':                                         'category',
        'IsBeta':                                               'int8',
        'RtpStateBitfield':                                     'float16',
        'IsSxsPassiveMode':                                     'int8',
        'DefaultBrowsersIdentifier':                            'float16',
        'AVProductStatesIdentifier':                            'float32',
        'AVProductsInstalled':                                  'float16',
        'AVProductsEnabled':                                    'float16',
        'HasTpm':                                               'int8',
        'CountryIdentifier':                                    'int16',
        'CityIdentifier':                                       'float32',
        'OrganizationIdentifier':                               'float16',
        'GeoNameIdentifier':                                    'float16',
        'LocaleEnglishNameIdentifier':                          'int8',
        'Platform':                                             'category',
        'Processor':                                            'category',
        'OsVer':                                                'category',
        'OsBuild':                                              'int16',
        'OsSuite':                                              'int16',
        'OsPlatformSubRelease':                                 'category',
        'OsBuildLab':                                           'category',
        'SkuEdition':                                           'category',
        'IsProtected':                                          'float16',
        'AutoSampleOptIn':                                      'int8',
        'PuaMode':                                              'category',
        'SMode':                                                'float16',
        'IeVerIdentifier':                                      'float16',
        'SmartScreen':                                          'category',
        'Firewall':                                             'float16',
        'UacLuaenable':                                         'float32',
        'Census_MDC2FormFactor':                                'category',
        'Census_DeviceFamily':                                  'category',
        'Census_OEMNameIdentifier':                             'float16',
        'Census_OEMModelIdentifier':                            'float32',
        'Census_ProcessorCoreCount':                            'float16',
        'Census_ProcessorManufacturerIdentifier':               'float16',
        'Census_ProcessorModelIdentifier':                      'float16',
        'Census_ProcessorClass':                                'category',
        'Census_PrimaryDiskTotalCapacity':                      'float32',
        'Census_PrimaryDiskTypeName':                           'category',
        'Census_SystemVolumeTotalCapacity':                     'float32',
        'Census_HasOpticalDiskDrive':                           'int8',
        'Census_TotalPhysicalRAM':                              'float32',
        'Census_ChassisTypeName':                               'category',
        'Census_InternalPrimaryDiagonalDisplaySizeInInches':    'float16',
        'Census_InternalPrimaryDisplayResolutionHorizontal':    'float16',
        'Census_InternalPrimaryDisplayResolutionVertical':      'float16',
        'Census_PowerPlatformRoleName':                         'category',
        'Census_InternalBatteryType':                           'category',
        'Census_InternalBatteryNumberOfCharges':                'float32',
        'Census_OSVersion':                                     'category',
        'Census_OSArchitecture':                                'category',
        'Census_OSBranch':                                      'category',
        'Census_OSBuildNumber':                                 'int16',
        'Census_OSBuildRevision':                               'int32',
        'Census_OSEdition':                                     'category',
        'Census_OSSkuName':                                     'category',
        'Census_OSInstallTypeName':                             'category',
        'Census_OSInstallLanguageIdentifier':                   'float16',
        'Census_OSUILocaleIdentifier':                          'int16',
        'Census_OSWUAutoUpdateOptionsName':                     'category',
        'Census_IsPortableOperatingSystem':                     'int8',
        'Census_GenuineStateName':                              'category',
        'Census_ActivationChannel':                             'category',
        'Census_IsFlightingInternal':                           'float16',
        'Census_IsFlightsDisabled':                             'float16',
        'Census_FlightRing':                                    'category',
        'Census_ThresholdOptIn':                                'float16',
        'Census_FirmwareManufacturerIdentifier':                'float16',
        'Census_FirmwareVersionIdentifier':                     'float32',
        'Census_IsSecureBootEnabled':                           'int8',
        'Census_IsWIMBootEnabled':                              'float16',
        'Census_IsVirtualDevice':                               'float16',
        'Census_IsTouchEnabled':                                'int8',
        'Census_IsPenCapable':                                  'int8',
        'Census_IsAlwaysOnAlwaysConnectedCapable':              'float16',
        'Wdft_IsGamer':                                         'float16',
        'Wdft_RegionIdentifier':                                'float16',
        'HasDetections':                                        'int8'
        }


print("Loading data...")

Data = pd.read_csv("../data/train.csv", dtype=dtypes)

print("Data loaded")

Data = Data.loc[:, ["ProductName", "EngineVersion", "AppVersion", "AvSigVersion", "AVProductStatesIdentifier", "HasTpm", "CountryIdentifier", "CityIdentifier", "OrganizationIdentifier", "GeoNameIdentifier", "LocaleEnglishNameIdentifier", "Platform", "Processor", "OsVer", "OsBuild", "OsSuite", "OsPlatformSubRelease", "OsBuildLab", "SkuEdition", "IsProtected", "PuaMode", "SMode", "SmartScreen", "Firewall", "UacLuaenable", "Census_MDC2FormFactor", "Census_DeviceFamily", "Census_ProcessorCoreCount", "Census_ProcessorClass", "Census_PrimaryDiskTotalCapacity", "Census_PrimaryDiskTypeName", "Census_SystemVolumeTotalCapacity", "Census_HasOpticalDiskDrive", "Census_TotalPhysicalRAM", "Census_ChassisTypeName", "Census_InternalPrimaryDiagonalDisplaySizeInInches", "Census_InternalPrimaryDisplayResolutionHorizontal", "Census_InternalPrimaryDisplayResolutionVertical", "Census_PowerPlatformRoleName", "Census_OSVersion", "Census_OSArchitecture", "Census_OSBranch", "Census_OSBuildNumber", "Census_OSBuildRevision", "Census_OSEdition", "Census_OSSkuName", "Census_OSInstallTypeName", "Census_OSWUAutoUpdateOptionsName", "Census_IsPortableOperatingSystem", "Census_GenuineStateName", "Census_ActivationChannel", "Census_IsFlightsDisabled", "Census_FlightRing", "Census_IsSecureBootEnabled", "Census_IsVirtualDevice", "Census_IsTouchEnabled", "Census_IsPenCapable", "Census_IsAlwaysOnAlwaysConnectedCapable", "Wdft_IsGamer", "HasDetections"]]

print("Selected columns from data")


dtypes = {
        'MachineIdentifier':                                    'category',
        'ProductName':                                          'category',
        'EngineVersion':                                        'category',
        'AppVersion':                                           'category',
        'AvSigVersion':                                         'category',
        'IsBeta':                                               'int8',
        'RtpStateBitfield':                                     'float16',
        'IsSxsPassiveMode':                                     'int8',
        'DefaultBrowsersIdentifier':                            'float16',
        'AVProductStatesIdentifier':                            'float32',
        'AVProductsInstalled':                                  'float16',
        'AVProductsEnabled':                                    'float16',
        'HasTpm':                                               'int8',
        'CountryIdentifier':                                    'int16',
        'CityIdentifier':                                       'float32',
        'OrganizationIdentifier':                               'float16',
        'GeoNameIdentifier':                                    'float16',
        'LocaleEnglishNameIdentifier':                          'int8',
        'Platform':                                             'category',
        'Processor':                                            'category',
        'OsVer':                                                'category',
        'OsBuild':                                              'int16',
        'OsSuite':                                              'int16',
        'OsPlatformSubRelease':                                 'category',
        'OsBuildLab':                                           'category',
        'SkuEdition':                                           'category',
        'IsProtected':                                          'float16',
        'AutoSampleOptIn':                                      'int8',
        'PuaMode':                                              'category',
        'SMode':                                                'float16',
        'IeVerIdentifier':                                      'float16',
        'SmartScreen':                                          'category',
        'Firewall':                                             'float16',
        'UacLuaenable':                                         'float32',
        'Census_MDC2FormFactor':                                'category',
        'Census_DeviceFamily':                                  'category',
        'Census_OEMNameIdentifier':                             'float16',
        'Census_OEMModelIdentifier':                            'float32',
        'Census_ProcessorCoreCount':                            'float16',
        'Census_ProcessorManufacturerIdentifier':               'float16',
        'Census_ProcessorModelIdentifier':                      'float16',
        'Census_ProcessorClass':                                'category',
        'Census_PrimaryDiskTotalCapacity':                      'float32',
        'Census_PrimaryDiskTypeName':                           'category',
        'Census_SystemVolumeTotalCapacity':                     'float32',
        'Census_HasOpticalDiskDrive':                           'int8',
        'Census_TotalPhysicalRAM':                              'float32',
        'Census_ChassisTypeName':                               'category',
        'Census_InternalPrimaryDiagonalDisplaySizeInInches':    'float16',
        'Census_InternalPrimaryDisplayResolutionHorizontal':    'float16',
        'Census_InternalPrimaryDisplayResolutionVertical':      'float16',
        'Census_PowerPlatformRoleName':                         'category',
        'Census_InternalBatteryType':                           'category',
        'Census_InternalBatteryNumberOfCharges':                'float32',
        'Census_OSVersion':                                     'category',
        'Census_OSArchitecture':                                'category',
        'Census_OSBranch':                                      'category',
        'Census_OSBuildNumber':                                 'int16',
        'Census_OSBuildRevision':                               'int32',
        'Census_OSEdition':                                     'category',
        'Census_OSSkuName':                                     'category',
        'Census_OSInstallTypeName':                             'category',
        'Census_OSInstallLanguageIdentifier':                   'float16',
        'Census_OSUILocaleIdentifier':                          'int16',
        'Census_OSWUAutoUpdateOptionsName':                     'category',
        'Census_IsPortableOperatingSystem':                     'int8',
        'Census_GenuineStateName':                              'category',
        'Census_ActivationChannel':                             'category',
        'Census_IsFlightingInternal':                           'float16',
        'Census_IsFlightsDisabled':                             'float16',
        'Census_FlightRing':                                    'category',
        'Census_ThresholdOptIn':                                'float16',
        'Census_FirmwareManufacturerIdentifier':                'float16',
        'Census_FirmwareVersionIdentifier':                     'float32',
        'Census_IsSecureBootEnabled':                           'int8',
        'Census_IsWIMBootEnabled':                              'float16',
        'Census_IsVirtualDevice':                               'float16',
        'Census_IsTouchEnabled':                                'int8',
        'Census_IsPenCapable':                                  'int8',
        'Census_IsAlwaysOnAlwaysConnectedCapable':              'float16',
        'Wdft_IsGamer':                                         'float16',
        'Wdft_RegionIdentifier':                                'float16'
        }


DataTest = pd.read_csv("../data/test.csv", dtype=dtypes)

DataTestFin = DataTest.loc[:, ["ProductName", "EngineVersion", "AppVersion", "AvSigVersion", "AVProductStatesIdentifier", "HasTpm", "CountryIdentifier", "CityIdentifier", "OrganizationIdentifier", "GeoNameIdentifier", "LocaleEnglishNameIdentifier", "Platform", "Processor", "OsVer", "OsBuild", "OsSuite", "OsPlatformSubRelease", "OsBuildLab", "SkuEdition", "IsProtected", "PuaMode", "SMode", "SmartScreen", "Firewall", "UacLuaenable", "Census_MDC2FormFactor", "Census_DeviceFamily", "Census_ProcessorCoreCount", "Census_ProcessorClass", "Census_PrimaryDiskTotalCapacity", "Census_PrimaryDiskTypeName", "Census_SystemVolumeTotalCapacity", "Census_HasOpticalDiskDrive", "Census_TotalPhysicalRAM", "Census_ChassisTypeName", "Census_InternalPrimaryDiagonalDisplaySizeInInches", "Census_InternalPrimaryDisplayResolutionHorizontal", "Census_InternalPrimaryDisplayResolutionVertical", "Census_PowerPlatformRoleName", "Census_OSVersion", "Census_OSArchitecture", "Census_OSBranch", "Census_OSBuildNumber", "Census_OSBuildRevision", "Census_OSEdition", "Census_OSSkuName", "Census_OSInstallTypeName","Census_OSWUAutoUpdateOptionsName", "Census_IsPortableOperatingSystem", "Census_GenuineStateName", "Census_ActivationChannel", "Census_IsFlightsDisabled", "Census_FlightRing", "Census_IsSecureBootEnabled", "Census_IsVirtualDevice", "Census_IsTouchEnabled", "Census_IsPenCapable", "Census_IsAlwaysOnAlwaysConnectedCapable", "Wdft_IsGamer"]]

X = Data.drop(['HasDetections'],axis=1)
y = LabelEncoder().fit_transform(Data.HasDetections)
xTrain, xTest, yTrain, yTest = train_test_split(X, y, test_size=0.3, random_state=0)

print("Split data into Train and Test")

print("Encode string labels")

le = LabelEncoder()
for column_name in xTrain.columns:
        if xTrain[column_name].dtype.name == 'category':
            xTrain.loc[:, column_name] = le.fit_transform(xTrain[column_name].astype(str))
        else:
            pass

xTrain = xTrain.fillna(-999)


for column_name in xTest.columns:
        if xTest[column_name].dtype.name == 'category':
            xTest.loc[:, column_name] = le.fit_transform(xTest[column_name].astype(str))
        else:
            pass

xTest = xTest.fillna(-999)

for column_name in DataTestFin.columns:
        if DataTestFin[column_name].dtype.name == 'category':
            DataTestFin.loc[:, column_name] = le.fit_transform(DataTestFin[column_name].astype(str))
        else:
            pass

DataTestFin = DataTestFin.fillna(-999)



ffm_model = xl.FMModel(task='binary', 
                        lr=0.001, 
                        epoch=100, 
                        reg_lambda=0.01,
                        metric='auc')

print("Fitting Model...")

# Start to train
# Directly use string to specify data source
ffm_model.fit(xTrain, yTrain, eval_set=[xTest, yTest])

# print model weights
#print(ffm_model.weights)

print("Generating predictions")
# Generate predictions
y_pred = ffm_model.predict(DataTestFin)

#print(log_loss(yTest, y_pred))

results_final = pd.DataFrame(data=y_pred,    # values
           index=DataTest['MachineIdentifier'],    # 1st column as index
           columns=['HasDetections'])  # 1st row as the column names

print("Saving predictions")
pd.DataFrame.to_csv(results_final, "results_final_xlearn.csv")

#print("Saving Model")
#filename = 'xlearn_model.sav'
#pickle.dump(ffm_model.get_model(), open(filename, 'wb'))




